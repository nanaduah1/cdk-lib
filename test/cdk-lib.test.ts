// import * as cdk from 'aws-cdk-lib';
// import { Template } from 'aws-cdk-lib/assertions';
// import * as CdkLib from '../lib/index';

// example test. To run these tests, uncomment this file along with the
// example resource in lib/index.ts

import * as fs from "fs";
import { PoetryLockParser } from "../lib/lambda/bundling";

const exampleLockFile = `
# This file is automatically @generated by Poetry 1.6.1 and should not be changed by hand.

[[package]]
name = "cloudlydb"
version = "2.1.0"
description = ""
optional = false
python-versions = ">=3.9 <4.0"
files = []
develop = false

[package.source]
type = "git"
url = "https://github.com/nanaduah1/cloudly-dynamodb.git"
reference = "2.1.0"
resolved_reference = "5aa75a093eb304e820243219c29cfb54563cd73a"

[[package]]
name = "payeasy"
version = "0.1.0"
description = ""
optional = false
python-versions = "^3.11"
files = []
develop = false

[package.dependencies]
cloudlydb = {git = "https://github.com/nanaduah1/cloudly-dynamodb.git", rev = "2.1.0"}

[package.source]
type = "directory"
url = "../../apis/payeasy"

[metadata]
lock-version = "2.0"
python-versions = "^3.11"
content-hash = "fd5762ae9418f7d9890f882ab7d4a2db322a09f4777b22b7253db7d659e61fb7"
`;
test("PoetryDependenciesParser", () => {
  // Create temp file with example lock file
  const tempLockFile = fs.mkdtempSync("test");
  const lockFilePath = `${tempLockFile}/poetry.lock`;
  fs.writeFileSync(lockFilePath, exampleLockFile);

  const parser = new PoetryLockParser();
  const localDeps = parser.getLocalDependencies(tempLockFile);
  fs.rmSync(tempLockFile, { recursive: true });

  expect(localDeps).toHaveLength(1);
  expect(localDeps[0].name).toEqual("payeasy");
  expect(localDeps[0].url).toEqual("../../apis/payeasy");
  expect(localDeps[0].type).toEqual("directory");
  expect(localDeps[0].version).toEqual("0.1.0");
});
